---
title: "Quarto World Bank Theme"
subtitle: "A minimalist theme for Quarto/Reveal.js presentations for the World Bank"
author: "[Bernhard Bieri](https://bernhardbieri.ch)"
institute: The World Bank
date: today
date-format: "dddd, [the] D[<sup style='font-size:65%;font-style:italic;'>th</sup>] [of] MMMM, YYYY"
bibliography: bib/template.bib
format:
  worldbank-revealjs:
    embed-resources: true
    self-contained-math: true
    logo: logo.png
    footer: "[World Bank](https://github.com/worldbank) theme for [Quarto Presentations](https://quarto.org/docs/presentations/revealjs/index.html). Code available on [GitHub](https://github.com/BBieri/quartoWBtheme)."
incremental: true
---

```{r}
#| include: false
# Add default ggplot theme. This can be overridden by your own theme at
# the end of the ggplot graph.
source("_extensions/worldbank/setup-ggplot2-worldbank.R")
# Install the reticulate package to render Python code.
# install.packages("reticulate")
```

## Authors

:::: {.columns .vh-center-container}

::: {.column width="33%"}
<img src="https://img.icons8.com/cotton/64/null/gender-neutral-user--v3.png"/>

**Author 1**

Affiliation
:::

::: {.column width="33%"}
<img src="https://img.icons8.com/cotton/64/null/gender-neutral-user--v3.png"/>

**Author 2**

Affiliation
:::

::: {.column width="34%"}
<img src="https://img.icons8.com/cotton/64/null/gender-neutral-user--v3.png"/>

**Author 3**

Affiliation
:::

::::

## Introducing the World Bank's Quarto theme

This presentation template accelerates the creation of
[Reveal.js](https://revealjs.com/) presentations by taking care of the
formatting of your presentations so that users can focus on the **content**.

## What is Quarto?

Quarto enables you to weave together content and executable code into a finished presentation.
To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

## Why Quarto? What about Rmd presentations? {auto-animate="true"}

- Yihui Xie has [a neat blog post](https://yihui.org/en/2022/04/quarto-r-markdown/) explaining the difference between the two ways of rendering presentations.
- Quarto also has [a nice FAQ thread](https://quarto.org/docs/faq/rmarkdown.html) on their website about the differences between `.Rmd` and Quarto documents.
-  **Key Insight 1:** While there is no obvious need for existing `.Rmd` users to switch yet, Quarto's new features will most likely not be backported to `.Rmd`.
-  **Key Insight 2:** The present template can easily be used by folks running their analysis in Python thanks to the language agnostic nature of Quarto!

# Sharing your presentation! {background-color="#002244"}

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code.
You can embed code like this:

```{r}
#| echo: true
1 + 1
```

> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).

You can also add `text marked as code`!

## Running Python within Quarto Presentation with `{reticulate}` {auto-animate="true"}

You can even render content written in Python directly thanks to the `{reticulate}` R-package and a Python installation.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"
#| code-fold: true
#| echo: true

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```


## Equations

Adding Latex style equations is straightforward. Here is Euler's identity:

$$
\begin{equation}
e^{i\pi} + 1 = 0
\end{equation}
$$

. . .

And here is Shepherd's lemma:

$$
\begin{equation}
\frac{P_1 - P_2}{Q_1 - Q_2} > \frac{P_1 - P_3}{Q_1 - Q_3}
\end{equation}
$$

# New topic! {background-color="#002244"}

To make a slide like this, use:

    # Title of slide {background-color="#002244"}

## Tabset example

::: panel-tabset
## Example 1

Content here for tabset 1 :)

## Example 2

More content here, for tabset 2 :)
:::

## Incremental content

Hi! 

. . .


Use `. . .` to separate content as an incremental slide!


## You can add R code...

```{r}
#| echo: true
library(dplyr)
library(ggplot2)
g <- starwars |> 
  ggplot() +
  geom_point(aes(x = height, y = mass)) +
  theme_light()
```

## You can add R code...and focus on a specific line:

```{r}
#| echo: true
#| code-line-numbers: "5"
library(dplyr)
library(ggplot2)
g <- starwars |> 
  ggplot() +
  geom_point(aes(x = height, y = mass)) +
  theme_light()
```

> See the [Quarto Documentation for more details.](https://quarto.org/docs/presentations/revealjs/#code-blocks)

## Before showing the results :)

```{r}
#| fig.align: center
#| echo: true
g
```

## What about tables? {.smaller}

### `knitr::kable()`

::: columns
::: {.column width="45%"}
```{r}
#| label: kable-ex
#| echo: true
#| eval: false
tab <- starwars |>
  tidyr::drop_na(species) |> 
  group_by(species) |>
  summarise(
    n = n(),
    mean_heigth = round(mean(height, na.rm = TRUE)),
    mean_mass = round(mean(mass, na.rm = TRUE))
  ) |> 
  slice_max(order_by = n, n = 4) 

knitr::kable(tab)
```
:::

::: {.column width="45%"}
```{r}
#| label: kable-ex
#| eval: true
```
:::
:::

## `DT::datatable()` {.smaller}

With the `smaller` class in the slide!
Ex: `## slide name {.smaller}`

```{r}
DT::datatable(tab, options = list(pageLength = 5))
```

## `gt::gt()`

```{r}
gt::gt(tab)
```

## `reactable::reactable()`

```{r}
reactable::reactable(tab)
```

## Slide with speaker notes

Adding speaker notes is easilz done by creating a slide containing a div with class `.notes`, e.g.:

```
## Slide with speaker notes

Slide content

::: {.notes}
Speaker notes go here.
:::
```

When in presentation mode, you can access the speaker notes by pressing `s` on your keyboard.

::: {.notes}
Speaker notes go here.
:::

## Creating an automatic bibliography:

Research is almost always built upon existing knowledge. Acknowledging the latter is therefore key. Quarto allows this bz specifying `bibliography: bibfile.bib` in the YAML header.

One can then add citations with the @ key [@arrowReviewOrdinalistUtilitarianNotes1973]. To generate the bibliography simply insert a slide with:

```
## References

::: {#refs}
:::
```

> See the [Quarto documentation entry on citations](https://quarto.org/docs/authoring/footnotes-and-citations.html#citations) for more details.

## References

::: {#refs}
:::

# Sharing your presentation! {background-color="#002244"}

## Presenting your rendered presentation

Rendering your presentation will create either a self-contained HTML presentation or an HTML file plus a folder with all supporting files needed by your presentation depending on whether `embed-resources:` is set to `true` or not in the YAML header.

To present your slides locally, simply open the `html` file in your favorite browser. Don't forget to check out the key-bindings by typing `?` once your presentation is open in your browser.

## Sharing your HTML presentation online

Sharing your HTML presentation takes one line of code! Open up a terminal and type the following line to deploy your presentation to Netlify.

```
quarto publish netlify yourpresentation.qmd
```

> See the [Quarto documentation for ways of publishing your presentation](https://quarto.org/docs/output-formats/html-publishing.html#standalone-html).

## Exporting into PDF

You can use the function `pagedown::chrome_print()` to print the HTML version into a PDF!

```r
# install.packages("pagedown")
pagedown::chrome_print("path-to-file.html")
```

## Acknowlegements

This presentation and the template it showcases are inspired from the following
creators:

- [The RLadies theme](https://beatrizmilz.github.io/quarto-rladies-theme)
- [The coeos theme](https://github.com/mcanouil/quarto-revealjs-coeos)
- [Hrbrmstr's minimalistic `{ggplot}` themes](https://github.com/hrbrmstr/hrbrthemes)

## Useful Resources

Want to go further? Here are some great resources to get you started:

- [Presenting Quarto Slides Documentation](https://quarto.org/docs/presentations/revealjs/presenting.html)
- [The Advanced Quarto/Reveal Documentation](https://quarto.org/docs/presentations/revealjs/advanced.html)
- [A Quarto Tip a Day](https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/)
